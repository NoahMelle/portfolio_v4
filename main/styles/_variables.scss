$xlFont: clamp(1.5rem, 2.5vw, 2.5rem);
$lgFont: clamp(1rem, 2vw, 1.5rem);
$bigHeaderSize: clamp(3rem, 5vw, 5rem);
$h3Heading: clamp(1.5rem, 2.5vw, 2.5rem);
$h2Heading: clamp(2.5rem, 3vw, 4rem);

$tabletBreakpoint: 768px;

$white: #eef3f3;
$black: #0e0e0e;
$blackText: #3f4144;

@keyframes fadeIn {
    from {
        opacity: 0;
    }
    to {
        opacity: 0.7;
    }
}

@mixin colorShadow($color, $opacity: 1) {
    background-color: rgba($color, $opacity);
    box-shadow: 0 0 75px 75px rgba($color, $opacity);
}

@mixin glassMorhpism($color, $opacity: 1) {
    background-color: rgba($color, $opacity);
    backdrop-filter: blur(10px);
    border-radius: 1rem;
    padding: 1rem;
    border: 1px solid lighten($color, 10%);
}

@mixin responsiveGrid($min, $max) {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax($min, $max));
    gap: 2rem;
}

@mixin overlayShine($color) {
    position: relative;
    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(90deg, transparent, $color, transparent);
        background-size: 200%;
        z-index: 2;
        animation: shine 4s infinite linear;
        transform: rotate(-135deg);
    }
}

@keyframes shine {
    0% {
        background-position: -200%;
    }
    100% {
        background-position: 200%;
    }
}

@mixin gridLayout($gap: 1rem, $column-count: 2, $min-width: 300px) {
    --grid-layout-gap: #{$gap};
    --grid-column-count: #{$column-count}; /* This can be overridden by inline style */
    --grid-item--min-width: #{$min-width}; /* This can be overridden by inline style */

    --gap-count: calc(var(--grid-column-count) - 1);
    --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
    --grid-item--max-width: calc(
        (100% - var(--total-gap-width)) / var(--grid-column-count)
    );

    display: grid;
    grid-template-columns: repeat(
        auto-fill,
        minmax(
            max(var(--grid-item--min-width), var(--grid-item--max-width)),
            1fr
        )
    );
    grid-gap: var(--grid-layout-gap);
}
